[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
if = "has('nvim')"
on_i = 1
hook_source = '''
source ~/.config/nvim/plugins/deoplete.rc.vim
'''

#[[plugins]]
#repo = 'Shougo/neocomplete.vim'
#depends = 'context_filetype.vim'
#if = "has('lua')"
#on_i = 1
#hook_source = '''
#source ~/.config/nvim/plugins/neocomplete.rc.vim
#'''

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

#[[plugins]]
#repo = 'tweekmonster/deoplete-clang2'
#hook_source = '''
#let g:deoplete#sources#clang#libclang_path = '/usr/lib/x86_64-linux-gnu/libclang-3.8.so.1'
#let g:deoplete#sources#clang#clang_header = '/usr/include/clang'
#'''
#depends = 'deoplete.nvim'
#on_ft = ['c', 'cpp']

[[plugins]]
#repo = 'tweekmonster/deoplete-clang2'
repo = 'zchee/deoplete-clang'
hook_source = '''
let g:deoplete#sources#clang#libclang_path = '/usr/lib/x86_64-linux-gnu/libclang-3.8.so.1'
let g:deoplete#sources#clang#clang_header = '/usr/include/clang'
'''
on_ft = ['c','cpp','cmake']
depends = 'deoplete.nvim'
#let g:deoplete#sources#clang#libclang_path = '/usr/lib/llvm-3.8/lib/libclang-3.8.so.1'

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_i = 1
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'ludovicchabant/vim-gutentags'
on_ft = ['c', 'cpp']
hook_source = '''
let g:gutentags_enabled=1
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = 'deoplete.nvim'
if = "has('nvim')"
on_ft = 'python'
hook_source = '''
if has('unix')
  let g:python_host_prog = '/home/kakehi/.pyenv/shims/python'
  let g:python3_host_prog = '/home/kakehi/.pyenv/shims/python3'
endif
if has('mac')
  let g:python_host_prog = '/usr/local/bin/python2'
  let g:python3_host_prog = '/usr/local/bin/python3'
endif
'''

[[plugins]]
repo = 'zchee/deoplete-go'
depends = 'deoplete.nvim'
if = "has('nvim')"
on_ft = 'go'
build = 'make'
hook_source = '''
let g:deoplete#sources#go#gocode_binary = $GOPATH.'/bin/gocode'
let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
let g:deoplete#sources#go#use_cache = 1
let g:deoplete#sources#go#json_directory = '~/.cache/deoplete/go/$GOOS_$GOARCH'
'''

[[plugins]]
repo = 'ujihisa/neco-look'
on_source = ['neocomplete.vim', 'deoplete.nvim']

#------------------------------------------------
# lang
#------------------------------------------------

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'vim-jp/cpp-vim'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_source = '''
let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_source = '''
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
'''

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'
on_ft = 'python'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'

[[plugins]]
repo = 'mxw/vim-jsx'
on_ft = 'javascript'

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = 'typescript'

[[plugins]]
repo = 'rhysd/vim-gfm-syntax'
on_ft = ['markdown', 'mkd']
